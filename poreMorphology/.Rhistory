gc()
library(fractaldim)
library(RandomFields)
library(fields)
library(raster)
library(fda)
rasterList <- "D:/server-files/SURFACES/A3/A3168.tif"
poreImgR <- raster(rasterList)
allPts <- rasterToPoints(poreImgR, function(x){x==255})[,-3]
plot(allPts, pch=".")
fd.estimate(allPts,methods="filter1", window.size = 100, step.size=100, plot.loglog = TRUE)
fd.estimate(allPts, methods="filter1",  plot.loglog = TRUE)
testMat <- as.matrix(poreImgR)
image.plot(testMat)
fd.estimate(testMat, methods="filter1", window.size = 100, step.size=100, plot.loglog = TRUE)
fd <- fd.estimate(testMat, methods="filter1", window.size = 100, step.size=100, plot.loglog = TRUE)
# 2d random fields
n <- 200
rf2d <- GaussRF(x = c(0,1, 1/n), y = c(0,1, 1/n),
model = "stable", grid = TRUE,
gridtriple = TRUE,
param = c(mean=0, variance=1, nugget=0, scale=1, kappa=1))
gc()
fd.estimate(testMat[1:100,1:100], methods="filter1", window.size = 100, step.size=100, plot.loglog = TRUE)
table(testMat)
fd.estimate(testMat, methods="filter1", window.size = 1000, step.size=100, plot.loglog = TRUE)
fd.estimate(testMat, methods="filter1", window.size = 1000, step.size=10, plot.loglog = TRUE)
fd.estimate(testMat, methods="boxcount", window.size = 1000, step.size=100, plot.loglog = TRUE)
roughSurf <- "D:/server-files/SURFACES/A3/A321.tif"
roughest <- raster(roughSurf)
roughestMat <- as.matrix(roughest)
fd.estimate(roughestMat, methods="boxcount", window.size = 1000, step.size=100, plot.loglog = TRUE)
fd.estimate(smoothestMat, methods="boxcount", window.size = length(smoothestMat), step.size=window.size, plot.loglog = TRUE)
smoothSurf <- "D:/server-files/SURFACES/A3/A3168.tif"
smoothest <- raster(smoothSurf)
smoothestMat <- as.matrix(smoothest)
fd.estimate(smoothestMat, methods="boxcount", window.size = length(smoothestMat), step.size=window.size, plot.loglog = TRUE)
fd.estimate(smoothestMat, methods="boxcount", window.size = length(smoothestMat), step.size=length(smoothestMat), plot.loglog = TRUE)
fd.estimate(roughestMat, methods="boxcount",
window.size = length(roughestMat), step.size=length(roughestMat), plot.loglog = TRUE)
smoothSurf <- "D:/server-files/SURFACES/A3/A30.tif"
smoothest <- raster(smoothSurf)
smoothestMat <- as.matrix(smoothest)
fd.estimate(smoothestMat, methods="boxcount",
window.size = length(smoothestMat), step.size=length(smoothestMat), plot.loglog = TRUE)
dev.off()
smoothSurf <- "D:/server-files/SURFACES/A3/A30.tif"
smoothest <- raster(smoothSurf)
smoothestMat <- as.matrix(smoothest)
fd.estimate(smoothestMat, methods="boxcount",
window.size = length(smoothestMat), step.size=length(smoothestMat), plot.loglog = TRUE)
roughSurf <- "D:/server-files/SURFACES/A3/A321.tif"
roughest <- raster(roughSurf)
roughestMat <- as.matrix(roughest)
fd.estimate(roughestMat, methods="boxcount",
window.size = length(roughestMat), step.size=length(roughestMat), plot.loglog = TRUE)
roughSurf <- "D:/server-files/SURFACES/A3/A330.tif"
roughest <- raster(roughSurf)
roughestMat <- as.matrix(roughest)
fd.estimate(roughestMat, methods="boxcount",
window.size = length(roughestMat), step.size=length(roughestMat), plot.loglog = TRUE)
dev.off()
smoothSurf <- "D:/server-files/SURFACES/A3/A30.tif"
smoothest <- raster(smoothSurf)
smoothestMat <- as.matrix(smoothest)
fd.estimate(smoothestMat, methods="transect",
window.size = length(smoothestMat), step.size=length(smoothestMat), plot.loglog = TRUE)
roughSurf <- "D:/server-files/SURFACES/A3/A330.tif"
roughest <- raster(roughSurf)
roughestMat <- as.matrix(roughest)
fd.estimate(roughestMat, methods="transect",
window.size = length(roughestMat), step.size=length(roughestMat), plot.loglog = TRUE)
fd.estim.isotropic(smoothestMat, p.index = 1, direction = 'hv',
plot.loglog = T, plot.allpoints = T)
smoothestMat <- as.matrix(smoothest)[1:1000,1:1000]
fd.estim.isotropic(smoothestMat, p.index = 1, direction = 'hv',
plot.loglog = T, plot.allpoints = T)
library(fractaldim)
library(RandomFields)
library(fields)
library(raster)
library(fda)
# 2d random fields
n <- 200
smoothSurf <- "D:/server-files/SURFACES/A3/A30.tif"
smoothest <- raster(smoothSurf)
smoothestMat <- as.matrix(smoothest)[1:1000,1:1000]
fd.estim.isotropic(smoothestMat, p.index = 1, direction = 'hv',
plot.loglog = T, plot.allpoints = T)
roughSurf <- "D:/server-files/SURFACES/A3/A330.tif"
roughest <- raster(roughSurf)
roughestMat <- as.matrix(roughest)
fd.estimate(roughestMat, methods="transect",
window.size = length(roughestMat), step.size=length(roughestMat), plot.loglog = TRUE)
fd.estim.isotropic(roughestMat, p.index = 1, direction = 'hv',
plot.loglog = T, plot.allpoints = T)
roughestMat <- as.matrix(roughest)[1:1000,1:1000]
fd.estim.isotropic(roughestMat, p.index = 1, direction = 'hv',
plot.loglog = T, plot.allpoints = T)
fd.estim.squareincr(smoothestMat, p.index = 1,
plot.loglog = T, plot.allpoints = T)
squareincr(roughestMat, p.index = 1, direction = 'hv',
plot.loglog = T, plot.allpoints = T)
fd.estim.squareincr(roughestMat, p.index = 1, direction = 'hv',
plot.loglog = T, plot.allpoints = T)
fd.estim.squareincr(roughestMat, p.index = 1,
plot.loglog = T, plot.allpoints = T)
par(mfrow=c(1,2))
par(mfrow=c(1,2))
smoothSurf <- "D:/server-files/SURFACES/O4.tif"
smoothest <- raster(smoothSurf)
smoothestMat <- as.matrix(smoothest)[1:1000,1:1000]
fd.estim.squareincr(smoothestMat, p.index = 1,
plot.loglog = T, plot.allpoints = T)
roughSurf <- "D:/server-files/SURFACES/O22.tif"
roughest <- raster(roughSurf)
roughestMat <- as.matrix(roughest)[1:1000,1:1000]
fd.estim.squareincr(roughestMat, p.index = 1,
plot.loglog = T, plot.allpoints = T)
# 2d random fields
n <- 128
rf2d <- GaussRF(x = c(0,1, 1/n), y = c(0,1, 1/n),
model = "stable", grid = TRUE, gridtriple = TRUE,
param = c(mean=0, variance=1, nugget=0, scale=1, kappa=1))
par(mfrow=c(1,3))
fd.estim.isotropic(rf2d, p.index = 1, direction='hv', plot.loglog = TRUE, plot.allpoints = TRUE)
fd.estim.squareincr(rf2d, p.index = 1, plot.loglog = TRUE, plot.allpoints = TRUE)
fd.estim.filter1(rf2d, p.index = 1, plot.loglog = TRUE, plot.allpoints = TRUE)
smoothSurf <- "D:/server-files/SURFACES/O4.tif"
smoothest <- raster(smoothSurf)
smoothestMat <- as.matrix(smoothest)[250:750,250:750]
fd.estim.squareincr(smoothestMat, p.index = 1,
plot.loglog = T, plot.allpoints = T)
roughestMat <- as.matrix(roughest)[250:750,250:750]
fd.estim.squareincr(roughestMat, p.index = 1,
plot.loglog = T, plot.allpoints = T)
par(mfrow=c(1,3))
fd.estim.isotropic(rf2d, p.index = 1, direction='hv', plot.loglog = TRUE, plot.allpoints = TRUE)
fd.estim.squareincr(rf2d, p.index = 1, plot.loglog = TRUE, plot.allpoints = TRUE)
fd.estim.filter1(rf2d, p.index = 1, plot.loglog = TRUE, plot.allpoints = TRUE)
