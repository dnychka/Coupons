which.min(harmonicSignals)
min(harmonicSignals)
layerSpacing[85]
n=51.27517
load(paste0(round(n,3),"spacingSyn0.rda"))
# center the coupon
centerCoupon <- cbind(scale(newCoupon[,1], center = TRUE, scale = FALSE),
scale(newCoupon[,2], center = TRUE, scale = FALSE),
newCoupon[,3])
h<-hist(~newCoupon[,3], w=5, plot = FALSE)
histSave <- rbind(h$counts, h$mids)
threshold <- 10
influence <- 0
xGrid <- seq(min(histSave[2,]), max(histSave[2,]), length.out = length(histSave[1,]))
lowpass <- splint(histSave[2,], histSave[1,], xGrid, lambda = 50)
frDt <- fft(histSave[1,]-lowpass)
Dtlen <- length(histSave[1,])
Fr <- (1:Dtlen/Dtlen)[1:(Dtlen/2)]
P <- (Mod(2*frDt/Dtlen)^2)[1:(Dtlen/2)]
plot(Fr,P,type="l", main = paste0(n))
lag <- length(Fr)/10
peak <- findFreq(P,lag,threshold,influence)
ind <- which(peak$signals==1)
Ppeaks <- P[ind]
Frpeaks <- Fr[ind]
fundFreq <- Frpeaks[which.max(Ppeaks)]
findHarmonic <- vector()
Frpeaks
fundFreq
xline(fundFreq*c(1/4,1/3,1/2,2,3,4,5), col = "grey", lty=3)
for(j in c(1/5,1/4,1/3,1/2,2,3,4,5)){
for(i in 1:length(Frpeaks)){
ifelse(all.equal(fundFreq*j, Frpeaks[i], tol = 0.01)==TRUE,  fundFreq <- c(fundFreq,Frpeaks[i]),  NA)
}
}
fundFreq
i=2
j=1/2
ifelse(all.equal(fundFreq*j, Frpeaks[i], tol = 0.01)==TRUE,  fundFreq <- c(fundFreq,Frpeaks[i]),  NA)
fundFreq*j
fundFreq <- Frpeaks[which.max(Ppeaks)]
fundFreq*j
Frpeaks
.098*.01
.098*.01+.098
ifelse(all.equal(fundFreq*j, Frpeaks[i], tol = 0.08)==TRUE,  fundFreq <- c(fundFreq,Frpeaks[i]),  NA)
fundFreq
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
min(harmonicSignals)
boxplot(harmonicSignals, main = "relative peak strength, synthetic layers")
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
# xline(min(Frpeaks), col = "cornflowerblue", lty=3)
#
# fundFreq <- min(fundFreq)
#
# xline(fundFreq*c(1,2,3,4), col = "violetred1", lty=3)
#
##find the harmonics
for(j in 1:5){
for(i in 1:length(Fr)){
ifelse(all.equal(fundFreq*j, Fr[i], tol = 0.05)==TRUE,  findHarmonic <- c(findHarmonic, P[i]) & print(i),  NA)
}
}
saveInd <- vector()
##find the harmonics
for(j in 1:5){
for(i in 1:length(Fr)){
ifelse(all.equal(fundFreq*j, Fr[i], tol = 0.05)==TRUE,  findHarmonic <- c(findHarmonic, P[i]) & saveInd <- c(saveInd,i),  NA)
}
}
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
which.min(harmonicSignals)
layerSpacing[47]
n=48.32215
load(paste0(round(n,3),"spacingSyn0.rda"))
# center the coupon
centerCoupon <- cbind(scale(newCoupon[,1], center = TRUE, scale = FALSE),
scale(newCoupon[,2], center = TRUE, scale = FALSE),
newCoupon[,3])
h<-hist(~newCoupon[,3], w=5, plot = FALSE)
histSave <- rbind(h$counts, h$mids)
threshold <- 10
influence <- 0
xGrid <- seq(min(histSave[2,]), max(histSave[2,]), length.out = length(histSave[1,]))
lowpass <- splint(histSave[2,], histSave[1,], xGrid, lambda = 50)
frDt <- fft(histSave[1,]-lowpass)
Dtlen <- length(histSave[1,])
Fr <- (1:Dtlen/Dtlen)[1:(Dtlen/2)]
P <- (Mod(2*frDt/Dtlen)^2)[1:(Dtlen/2)]
plot(Fr,P,type="l", main = paste0(n))
n=46.1745
load(paste0(round(n,3),"spacingSyn0.rda"))
# center the coupon
centerCoupon <- cbind(scale(newCoupon[,1], center = TRUE, scale = FALSE),
scale(newCoupon[,2], center = TRUE, scale = FALSE),
newCoupon[,3])
h<-hist(~newCoupon[,3], w=5, plot = FALSE)
histSave <- rbind(h$counts, h$mids)
threshold <- 10
influence <- 0
xGrid <- seq(min(histSave[2,]), max(histSave[2,]), length.out = length(histSave[1,]))
lowpass <- splint(histSave[2,], histSave[1,], xGrid, lambda = 50)
frDt <- fft(histSave[1,]-lowpass)
Dtlen <- length(histSave[1,])
Fr <- (1:Dtlen/Dtlen)[1:(Dtlen/2)]
P <- (Mod(2*frDt/Dtlen)^2)[1:(Dtlen/2)]
plot(Fr,P,type="l", main = paste0(n))
n=59.8657718
print(round(n,3))
load(paste0(round(n,3),"spacingSyn0.rda"))
# center the coupon
centerCoupon <- cbind(scale(newCoupon[,1], center = TRUE, scale = FALSE),
scale(newCoupon[,2], center = TRUE, scale = FALSE),
newCoupon[,3])
h<-hist(~newCoupon[,3], w=5, plot = FALSE)
histSave <- rbind(h$counts, h$mids)
threshold <- 10
influence <- 0
xGrid <- seq(min(histSave[2,]), max(histSave[2,]), length.out = length(histSave[1,]))
lowpass <- splint(histSave[2,], histSave[1,], xGrid, lambda = 50)
frDt <- fft(histSave[1,]-lowpass)
Dtlen <- length(histSave[1,])
Fr <- (1:Dtlen/Dtlen)[1:(Dtlen/2)]
P <- (Mod(2*frDt/Dtlen)^2)[1:(Dtlen/2)]
plot(Fr,P,type="l", main = paste0(n))
n=59.060402684538
load(paste0(round(n,3),"spacingSyn0.rda"))
# center the coupon
centerCoupon <- cbind(scale(newCoupon[,1], center = TRUE, scale = FALSE),
scale(newCoupon[,2], center = TRUE, scale = FALSE),
newCoupon[,3])
h<-hist(~newCoupon[,3], w=5, plot = FALSE)
histSave <- rbind(h$counts, h$mids)
threshold <- 10
influence <- 0
xGrid <- seq(min(histSave[2,]), max(histSave[2,]), length.out = length(histSave[1,]))
lowpass <- splint(histSave[2,], histSave[1,], xGrid, lambda = 50)
frDt <- fft(histSave[1,]-lowpass)
Dtlen <- length(histSave[1,])
Fr <- (1:Dtlen/Dtlen)[1:(Dtlen/2)]
P <- (Mod(2*frDt/Dtlen)^2)[1:(Dtlen/2)]
plot(Fr,P,type="l", main = paste0(n))
plot(Fr,P,type="l", main = paste0("layer spacing at ", round(n,3)))
n=46.1745
k=1
load(paste0(round(n,3),"spacingSyn0.rda"))
# center the coupon
centerCoupon <- cbind(scale(newCoupon[,1], center = TRUE, scale = FALSE),
scale(newCoupon[,2], center = TRUE, scale = FALSE),
newCoupon[,3])
h<-hist(~newCoupon[,3], w=5, plot = FALSE)
histSave <- rbind(h$counts, h$mids)
threshold <- 10
influence <- 0
xGrid <- seq(min(histSave[2,]), max(histSave[2,]), length.out = length(histSave[1,]))
lowpass <- splint(histSave[2,], histSave[1,], xGrid, lambda = 50)
frDt <- fft(histSave[1,]-lowpass)
Dtlen <- length(histSave[1,])
Fr <- (1:Dtlen/Dtlen)[1:(Dtlen/2)]
P <- (Mod(2*frDt/Dtlen)^2)[1:(Dtlen/2)]
plot(Fr,P,type="l", main = paste0("layer spacing at ", round(n,3)))
lag <- length(Fr)/10
peak <- findFreq(P,lag,threshold,influence)
ind <- which(peak$signals==1)
Ppeaks <- P[ind]
Frpeaks <- Fr[ind]
fundFreq <- Frpeaks[which.max(Ppeaks)]
findHarmonic <- vector()
for(j in c(1/5,1/4,1/3,1/2,2,3,4,5)){
for(i in 1:length(Frpeaks)){
ifelse(all.equal(fundFreq*j, Frpeaks[i], tol = 0.05)==TRUE,  fundFreq <- c(fundFreq,Frpeaks[i]),  NA)
}
}
fundFreq <- min(fundFreq)
xline(fundFreq*c(2,3,4,5), col = "grey", lty=3)
xline(fundFreq*c(1,2,3,4,5), col = "grey", lty=3)
n=51.27517
load(paste0(round(n,3),"spacingSyn0.rda"))
# center the coupon
centerCoupon <- cbind(scale(newCoupon[,1], center = TRUE, scale = FALSE),
scale(newCoupon[,2], center = TRUE, scale = FALSE),
newCoupon[,3])
h<-hist(~newCoupon[,3], w=5, plot = FALSE)
histSave <- rbind(h$counts, h$mids)
threshold <- 10
influence <- 0
xGrid <- seq(min(histSave[2,]), max(histSave[2,]), length.out = length(histSave[1,]))
lowpass <- splint(histSave[2,], histSave[1,], xGrid, lambda = 50)
frDt <- fft(histSave[1,]-lowpass)
Dtlen <- length(histSave[1,])
Fr <- (1:Dtlen/Dtlen)[1:(Dtlen/2)]
P <- (Mod(2*frDt/Dtlen)^2)[1:(Dtlen/2)]
n=59.8657718
load(paste0(round(n,3),"spacingSyn0.rda"))
# center the coupon
centerCoupon <- cbind(scale(newCoupon[,1], center = TRUE, scale = FALSE),
scale(newCoupon[,2], center = TRUE, scale = FALSE),
newCoupon[,3])
h<-hist(~newCoupon[,3], w=5, plot = FALSE)
histSave <- rbind(h$counts, h$mids)
threshold <- 10
influence <- 0
xGrid <- seq(min(histSave[2,]), max(histSave[2,]), length.out = length(histSave[1,]))
lowpass <- splint(histSave[2,], histSave[1,], xGrid, lambda = 50)
frDt <- fft(histSave[1,]-lowpass)
Dtlen <- length(histSave[1,])
Fr <- (1:Dtlen/Dtlen)[1:(Dtlen/2)]
P <- (Mod(2*frDt/Dtlen)^2)[1:(Dtlen/2)]
plot(Fr,P,type="l", main = paste0("layer spacing at ", round(n,3)))
n=48.32215
load(paste0(round(n,3),"spacingSyn0.rda"))
# center the coupon
centerCoupon <- cbind(scale(newCoupon[,1], center = TRUE, scale = FALSE),
scale(newCoupon[,2], center = TRUE, scale = FALSE),
newCoupon[,3])
h<-hist(~newCoupon[,3], w=5, plot = FALSE)
histSave <- rbind(h$counts, h$mids)
threshold <- 10
influence <- 0
xGrid <- seq(min(histSave[2,]), max(histSave[2,]), length.out = length(histSave[1,]))
lowpass <- splint(histSave[2,], histSave[1,], xGrid, lambda = 50)
frDt <- fft(histSave[1,]-lowpass)
Dtlen <- length(histSave[1,])
Fr <- (1:Dtlen/Dtlen)[1:(Dtlen/2)]
P <- (Mod(2*frDt/Dtlen)^2)[1:(Dtlen/2)]
plot(Fr,P,type="l", main = paste0("layer spacing at ", round(n,3)))
lag <- length(Fr)/10
peak <- findFreq(P,lag,threshold,influence)
ind <- which(peak$signals==1)
Ppeaks <- P[ind]
Frpeaks <- Fr[ind]
fundFreq <- Frpeaks[which.max(Ppeaks)]
findHarmonic <- vector()
for(j in c(1/5,1/4,1/3,1/2,2,3,4,5)){
for(i in 1:length(Frpeaks)){
ifelse(all.equal(fundFreq*j, Frpeaks[i], tol = 0.05)==TRUE,  fundFreq <- c(fundFreq,Frpeaks[i]),  NA)
}
}
fundFreq <- min(fundFreq)
xline(fundFreq*c(1,2,3,4,5), col = "grey", lty=3)
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
n=59.329
print(round(n,3))
load(paste0(round(n,3),"spacingSyn0.rda"))
# center the coupon
centerCoupon <- cbind(scale(newCoupon[,1], center = TRUE, scale = FALSE),
scale(newCoupon[,2], center = TRUE, scale = FALSE),
newCoupon[,3])
h<-hist(~newCoupon[,3], w=5, plot = FALSE)
histSave <- rbind(h$counts, h$mids)
threshold <- 10
influence <- 0
xGrid <- seq(min(histSave[2,]), max(histSave[2,]), length.out = length(histSave[1,]))
lowpass <- splint(histSave[2,], histSave[1,], xGrid, lambda = 50)
frDt <- fft(histSave[1,]-lowpass)
Dtlen <- length(histSave[1,])
Fr <- (1:Dtlen/Dtlen)[1:(Dtlen/2)]
P <- (Mod(2*frDt/Dtlen)^2)[1:(Dtlen/2)]
plot(Fr,P,type="l", main = paste0("layer spacing at ", round(n,3)))
lag <- length(Fr)/10
peak <- findFreq(P,lag,threshold,influence)
ind <- which(peak$signals==1)
Ppeaks <- P[ind]
Frpeaks <- Fr[ind]
Frpeaks
fundFreq <- Frpeaks[which.max(Ppeaks)]
findHarmonic <- vector()
fundFreq
xline(Frpeaks, col="steelblue", lty=3)
.0853*2
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
fundFreq <- max(Frpeaks[which(Frpeaks<0.1)])
n=59.329
load(paste0(round(n,3),"spacingSyn0.rda"))
# center the coupon
centerCoupon <- cbind(scale(newCoupon[,1], center = TRUE, scale = FALSE),
scale(newCoupon[,2], center = TRUE, scale = FALSE),
newCoupon[,3])
h<-hist(~newCoupon[,3], w=5, plot = FALSE)
histSave <- rbind(h$counts, h$mids)
threshold <- 10
influence <- 0
xGrid <- seq(min(histSave[2,]), max(histSave[2,]), length.out = length(histSave[1,]))
lowpass <- splint(histSave[2,], histSave[1,], xGrid, lambda = 50)
frDt <- fft(histSave[1,]-lowpass)
Dtlen <- length(histSave[1,])
Fr <- (1:Dtlen/Dtlen)[1:(Dtlen/2)]
P <- (Mod(2*frDt/Dtlen)^2)[1:(Dtlen/2)]
plot(Fr,P,type="l", main = paste0("layer spacing at ", round(n,3)))
lag <- length(Fr)/10
peak <- findFreq(P,lag,threshold,influence)
ind <- which(peak$signals==1)
Ppeaks <- P[ind]
Frpeaks <- Fr[ind]
fundFreq <- max(Frpeaks[which(Frpeaks<=0.1)])
findHarmonic <- vector()
for(j in c(1/5,1/4,1/3,1/2,2,3,4,5)){
for(i in 1:length(Frpeaks)){
ifelse(all.equal(fundFreq*j, Frpeaks[i], tol = 0.05)==TRUE,  fundFreq <- c(fundFreq,Frpeaks[i]),  NA)
}
}
fundFreq
fundFreq <- max(Frpeaks[which(Frpeaks<=0.1)])
findHarmonic <- vector()
xline(fundFreq*c(1,2,3,4,5), col = "grey", lty=3)
##find the harmonics
for(j in 1:5){
for(i in 1:length(Fr)){
ifelse(all.equal(fundFreq*j, Fr[i], tol = 0.05)==TRUE,  findHarmonic <- c(findHarmonic, P[i]),  NA)
}
}
sum(findHarmonic)/sum(P)
which(round(layerSpacing,3)==59.329)
harmonicSignals[145]
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
n=59.195
load(paste0(round(n,3),"spacingSyn0.rda"))
# center the coupon
centerCoupon <- cbind(scale(newCoupon[,1], center = TRUE, scale = FALSE),
scale(newCoupon[,2], center = TRUE, scale = FALSE),
newCoupon[,3])
h<-hist(~newCoupon[,3], w=5, plot = FALSE)
histSave <- rbind(h$counts, h$mids)
threshold <- 10
influence <- 0
xGrid <- seq(min(histSave[2,]), max(histSave[2,]), length.out = length(histSave[1,]))
lowpass <- splint(histSave[2,], histSave[1,], xGrid, lambda = 50)
frDt <- fft(histSave[1,]-lowpass)
Dtlen <- length(histSave[1,])
Fr <- (1:Dtlen/Dtlen)[1:(Dtlen/2)]
P <- (Mod(2*frDt/Dtlen)^2)[1:(Dtlen/2)]
plot(Fr,P,type="l", main = paste0("layer spacing at ", round(n,3)))
lag <- length(Fr)/10
peak <- findFreq(P,lag,threshold,influence)
ind <- which(peak$signals==1)
Ppeaks <- P[ind]
Frpeaks <- Fr[ind]
fundFreq <- max(Frpeaks[which(Frpeaks<=0.1)])
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
fundFreq <- max(Fr[which(Fr<=0.1)])
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
which.max(P[which(Fr<=0.1)])
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
fundFreq <- Fr[which.max(P[which(Fr<=0.1)])]
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
layeredCoupons <- harmonicSignals
nullCoupons <- c(harmonicSignalsNull, rep(NA, length(layeredCoupons)-length(nullCoupons)))
realCoupons <- c(realSignals, rep(NA, (length(nullCoupons)-length(realSignals))))
dat <- cbind(nullCoupons, realCoupons)
dev.off()
boxplot(dat, main = "relative peak strength, 0 degree coupons",
pch = 16, boxwex = 0.7)
dat <- cbind(dat, layeredCoupons)
boxplot(dat, main = "relative peak strength, 0 degree coupons",
pch = 16, boxwex = 0.7)
findHarmonic <- vector()
plot(Fr,P,type="l", main = paste0("layer spacing at ", round(n,3)))
##find the harmonics
for(j in 1:5){
for(i in 1:length(Frpeaks)){
ifelse(all.equal(fundFreq*j, Frpeaks[i], tol = 0.05)==TRUE,  findHarmonic <- c(findHarmonic, P[i]),  NA)
}
}
findHarmonic
findHarmonic <- vector()
##find the harmonics
for(j in 1:5){
for(i in 1:length(Frpeaks)){
ifelse(all.equal(fundFreq*j, Frpeaks[i], tol = 0.05)==TRUE,  findHarmonic <- c(findHarmonic, Ppeaks[i]),  NA)
}
}
findHarmonic
##find the harmonics
for(j in 1:5){
for(i in 1:length(Frpeaks)){
ifelse(all.equal(fundFreq*j, Frpeaks[i], tol = 0.05)==TRUE, print(i) ,  NA)
}
}
Frpeaks[c(4,5,6,7,9,10,11,12)]
xline(Frpeaks[c(4,5,6,7,9,10,11,12)], col="grey", lty=3)
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
n=43.087
load(paste0(round(n,3),"spacingSyn0.rda"))
# center the coupon
centerCoupon <- cbind(scale(newCoupon[,1], center = TRUE, scale = FALSE),
scale(newCoupon[,2], center = TRUE, scale = FALSE),
newCoupon[,3])
h<-hist(~newCoupon[,3], w=5, plot = FALSE)
histSave <- rbind(h$counts, h$mids)
threshold <- 5
influence <- 0
xGrid <- seq(min(histSave[2,]), max(histSave[2,]), length.out = length(histSave[1,]))
lowpass <- splint(histSave[2,], histSave[1,], xGrid, lambda = 50)
frDt <- fft(histSave[1,]-lowpass)
Dtlen <- length(histSave[1,])
Fr <- (1:Dtlen/Dtlen)[1:(Dtlen/2)]
P <- (Mod(2*frDt/Dtlen)^2)[1:(Dtlen/2)]
plot(Fr,P,type="l", main = paste0("layer spacing at ", round(n,3)))
lag <- length(Fr)/10
peak <- findFreq(P,lag,threshold,influence)
ind <- which(peak$signals==1)
Ppeaks <- P[ind]
Frpeaks <- Fr[ind]
Frpeaks
threshold <- 10
influence <- 0
xGrid <- seq(min(histSave[2,]), max(histSave[2,]), length.out = length(histSave[1,]))
lowpass <- splint(histSave[2,], histSave[1,], xGrid, lambda = 50)
frDt <- fft(histSave[1,]-lowpass)
Dtlen <- length(histSave[1,])
Fr <- (1:Dtlen/Dtlen)[1:(Dtlen/2)]
P <- (Mod(2*frDt/Dtlen)^2)[1:(Dtlen/2)]
plot(Fr,P,type="l", main = paste0("layer spacing at ", round(n,3)))
lag <- length(Fr)/10
peak <- findFreq(P,lag,threshold,influence)
ind <- which(peak$signals==1)
Ppeaks <- P[ind]
Frpeaks <- Fr[ind]
Frpeaks
0.350806/0.23387
0.4657/0/3508
0.4657/0.3508
23387097/2
.23387097/2
.23387097/2 * 3
xline(.23387097/2,col="grey",lty=3)
threshold <- 15
influence <- 0
xGrid <- seq(min(histSave[2,]), max(histSave[2,]), length.out = length(histSave[1,]))
lowpass <- splint(histSave[2,], histSave[1,], xGrid, lambda = 50)
frDt <- fft(histSave[1,]-lowpass)
Dtlen <- length(histSave[1,])
Fr <- (1:Dtlen/Dtlen)[1:(Dtlen/2)]
plot(Fr,P,type="l", main = paste0("layer spacing at ", round(n,3)))
P <- (Mod(2*frDt/Dtlen)^2)[1:(Dtlen/2)]
lag <- length(Fr)/10
peak <- findFreq(P,lag,threshold,influence)
ind <- which(peak$signals==1)
Ppeaks <- P[ind]
Frpeaks <- Fr[ind]
Frpeaks
max(Frpeaks)/2
max(Frpeaks)/3
xline(max(Frpeaks)/3, col="tomato", lty=3)
testFF <- Fr[which.max(Ppeaks)]
n=43.087
load(paste0(round(n,3),"spacingSyn0.rda"))
# center the coupon
centerCoupon <- cbind(scale(newCoupon[,1], center = TRUE, scale = FALSE),
scale(newCoupon[,2], center = TRUE, scale = FALSE),
newCoupon[,3])
h<-hist(~newCoupon[,3], w=5, plot = FALSE)
histSave <- rbind(h$counts, h$mids)
threshold <- 15
influence <- 0
xGrid <- seq(min(histSave[2,]), max(histSave[2,]), length.out = length(histSave[1,]))
lowpass <- splint(histSave[2,], histSave[1,], xGrid, lambda = 50)
frDt <- fft(histSave[1,]-lowpass)
Dtlen <- length(histSave[1,])
Fr <- (1:Dtlen/Dtlen)[1:(Dtlen/2)]
P <- (Mod(2*frDt/Dtlen)^2)[1:(Dtlen/2)]
plot(Fr,P,type="l", main = paste0("layer spacing at ", round(n,3)))
lag <- length(Fr)/10
peak <- findFreq(P,lag,threshold,influence)
ind <- which(peak$signals==1)
Ppeaks <- P[ind]
Frpeaks <- Fr[ind]
fundFreq <- Fr[which.max(P[which(Fr<=0.15)])]
findHarmonic <- vector()
testFF <- Fr[which.max(Ppeaks)]
testFF <- Frpeaks[which.max(Ppeaks)]
testFF <- Frpeaks[which.max(Ppeaks)]
for(j in c(1/2,1/3,1/4,1/5)){
temp <- testFF*j
if(temp <= 1.6){break}
}
for(j in c(1/2,1/3,1/4,1/5)){
temp <- testFF*j
if(temp <= .16){break}
}
for(j in c(1/2,1/3,1/4,1/5)){
temp <- testFF*j
if(temp <= .15){break}
}
xline(temp*c(1,2,3,4,5), col = "tomato", lty=3)
oldHarmonicSignals <- harmonicSignals
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
origFreq <- Frpeaks[which.max(Ppeaks)]
for(j in c(1/2,1/3,1/4,1/5)){
fundFreq <- origFreq*j
if(fundFreq <= .15){break}
}
fundFreq <- origFreq*j
origFreq <- Frpeaks[which.max(Ppeaks)]
Ppeaks <- P[ind]
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
source('~/Coupons/layers/0degreeSlice/testLayers0.R', echo=TRUE)
