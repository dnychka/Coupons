# open3d()
# par3d(cex=0.7)
# plot3d(RzyCoupon[,1],
#        RzyCoupon[,2],
#        RzyCoupon[,3],
#        type = "s", size = 0.25,
#        xlab = "x", ylab = "y", zlab = "z")
#h<-hist(RzyCoupon[,3], breaks = 5000, plot = FALSE)
#col = "darkgrey", main = paste0(theta))
h<-hist(~RzyCoupon[,3], w=n/10,
col = "darkgrey", main = paste0("z axis rotation (radians) = ",round(theta,3)))
histSave[[i]] <- h$counts
i = i + 1
}
histSavedf <- data.frame(lapply(histSave, "length<-", max(lengths(histSave))))
names(histSavedf) <- round(angleSeq, digits=3)
plot(round(angleSeq, digits=3),apply(histSavedf, 2, function(x) table(x)[1]), type = "b", pch = 20, main = paste0(n))
# }
#
which.max(apply(histSavedf, 2, function(x) table(x)[1]))
frDt <- fft(histSave[[21]]-mean(histSave[[21]]))
frDt <- fft(histSave[[41]]-mean(histSave[[41]]))
frNt <- fft(histSave[[30]]-mean(histSave[[30]]))
Ntlen <- length(histSave[[30]])
Dtlen <- length(histSave[[21]])
Dtlen <- length(histSave[[41]])
plot((1:Ntlen)/Ntlen, Mod(2*frNt/Ntlen)^2,  type = "l", main = "no layers")
Fr <- 1:Dtlen/Dtlen
P <- Mod(2*frDt/Dtlen)^2
plot(Fr[1:340],P[1:340],  type = "l", main = "layers")
firstHarmonic <- which.max(P[1:340])
xline(Fr[firstHarmonic], col = "grey", lty = 3)
Fr[firstHarmonic]
#for(n in numLayer){
#load(paste0("nlsCoupon",n,".rda"))
#load("nlsCoupon5.rda")
n = 50
load(paste0(n,"spacingSyn45.rda"))
# center the coupon
centerCoupon <- cbind(scale(newCoupon[,1], center = TRUE, scale = FALSE),
scale(newCoupon[,2], center = TRUE, scale = FALSE),
newCoupon[,3])
angleSeq <- seq(0, 2*pi, by = pi/20) #test out a sequence of theta
histSave <- list()
i = 1
for(theta in angleSeq){
Rz <- aboutZ(theta)
RzCoupon <- centerCoupon %*% Rz
phi <- 45*pi/180 #45 degree tilt
Ry <- aboutY(phi)
RzyCoupon <- RzCoupon %*% Ry
# open3d()
# par3d(cex=0.7)
# plot3d(RzyCoupon[,1],
#        RzyCoupon[,2],
#        RzyCoupon[,3],
#        type = "s", size = 0.25,
#        xlab = "x", ylab = "y", zlab = "z")
#h<-hist(RzyCoupon[,3], breaks = 5000, plot = FALSE)
#col = "darkgrey", main = paste0(theta))
h<-hist(~RzyCoupon[,3], w=n/10,
col = "darkgrey", main = paste0("z axis rotation (radians) = ",round(theta,3)))
histSave[[i]] <- h$counts
i = i + 1
}
histSavedf <- data.frame(lapply(histSave, "length<-", max(lengths(histSave))))
names(histSavedf) <- round(angleSeq, digits=3)
plot(round(angleSeq, digits=3),apply(histSavedf, 2, function(x) table(x)[1]), type = "b", pch = 20, main = paste0(n))
frDt <- fft(histSave[[21]]-mean(histSave[[21]]))
frNt <- fft(histSave[[30]]-mean(histSave[[30]]))
Ntlen <- length(histSave[[30]])
Dtlen <- length(histSave[[21]])
plot((1:Ntlen)/Ntlen, Mod(2*frNt/Ntlen)^2,  type = "l", main = "no layers")
Fr <- 1:Dtlen/Dtlen
P <- Mod(2*frDt/Dtlen)^2
plot(Fr[1:340],P[1:340],  type = "l", main = "layers")
firstHarmonic <- which.max(P[1:340])
xline(Fr[firstHarmonic], col = "grey", lty = 3)
Fr[firstHarmonic]
#for(n in numLayer){
#load(paste0("nlsCoupon",n,".rda"))
#load("nlsCoupon5.rda")
n = 20
load(paste0(n,"spacingSyn45.rda"))
# center the coupon
centerCoupon <- cbind(scale(newCoupon[,1], center = TRUE, scale = FALSE),
scale(newCoupon[,2], center = TRUE, scale = FALSE),
newCoupon[,3])
angleSeq <- seq(0, 2*pi, by = pi/20) #test out a sequence of theta
histSave <- list()
i = 1
for(theta in angleSeq){
Rz <- aboutZ(theta)
RzCoupon <- centerCoupon %*% Rz
phi <- 45*pi/180 #45 degree tilt
Ry <- aboutY(phi)
RzyCoupon <- RzCoupon %*% Ry
# open3d()
# par3d(cex=0.7)
# plot3d(RzyCoupon[,1],
#        RzyCoupon[,2],
#        RzyCoupon[,3],
#        type = "s", size = 0.25,
#        xlab = "x", ylab = "y", zlab = "z")
#h<-hist(RzyCoupon[,3], breaks = 5000, plot = FALSE)
#col = "darkgrey", main = paste0(theta))
h<-hist(~RzyCoupon[,3], w=n/10,
col = "darkgrey", main = paste0("z axis rotation (radians) = ",round(theta,3)))
histSave[[i]] <- h$counts
i = i + 1
}
histSavedf <- data.frame(lapply(histSave, "length<-", max(lengths(histSave))))
names(histSavedf) <- round(angleSeq, digits=3)
plot(round(angleSeq, digits=3),apply(histSavedf, 2, function(x) table(x)[1]), type = "b", pch = 20, main = paste0(n))
frDt <- fft(histSave[[21]]-mean(histSave[[21]]))
frNt <- fft(histSave[[30]]-mean(histSave[[30]]))
Ntlen <- length(histSave[[30]])
Dtlen <- length(histSave[[21]])
plot((1:Ntlen)/Ntlen, Mod(2*frNt/Ntlen)^2,  type = "l", main = "no layers")
Fr <- 1:Dtlen/Dtlen
P <- Mod(2*frDt/Dtlen)^2
plot(Fr[1:340],P[1:340],  type = "l", main = "layers")
plot(Fr[1:(Dtlen/2)],P[1:(Dtlen/2)],  type = "l", main = "layers")
firstHarmonic <- which.max(P[1:340])
xline(Fr[firstHarmonic], col = "grey", lty = 3)
#for(n in numLayer){
#load(paste0("nlsCoupon",n,".rda"))
#load("nlsCoupon5.rda")
n = 70
load(paste0(n,"spacingSyn45.rda"))
# center the coupon
centerCoupon <- cbind(scale(newCoupon[,1], center = TRUE, scale = FALSE),
scale(newCoupon[,2], center = TRUE, scale = FALSE),
newCoupon[,3])
angleSeq <- seq(0, 2*pi, by = pi/20) #test out a sequence of theta
histSave <- list()
i = 1
for(theta in angleSeq){
Rz <- aboutZ(theta)
RzCoupon <- centerCoupon %*% Rz
phi <- 45*pi/180 #45 degree tilt
Ry <- aboutY(phi)
RzyCoupon <- RzCoupon %*% Ry
# open3d()
# par3d(cex=0.7)
# plot3d(RzyCoupon[,1],
#        RzyCoupon[,2],
#        RzyCoupon[,3],
#        type = "s", size = 0.25,
#        xlab = "x", ylab = "y", zlab = "z")
#h<-hist(RzyCoupon[,3], breaks = 5000, plot = FALSE)
#col = "darkgrey", main = paste0(theta))
h<-hist(~RzyCoupon[,3], w=n/10,
col = "darkgrey", main = paste0("z axis rotation (radians) = ",round(theta,3)))
histSave[[i]] <- h$counts
i = i + 1
}
histSavedf <- data.frame(lapply(histSave, "length<-", max(lengths(histSave))))
names(histSavedf) <- round(angleSeq, digits=3)
plot(round(angleSeq, digits=3),apply(histSavedf, 2, function(x) table(x)[1]), type = "b", pch = 20, main = paste0(n))
frDt <- fft(histSave[[21]]-mean(histSave[[21]]))
frNt <- fft(histSave[[30]]-mean(histSave[[30]]))
lengths(h)
Ntlen <- length(histSave[[30]])
plot((1:Ntlen)/Ntlen, Mod(2*frNt/Ntlen)^2,  type = "l", main = "no layers")
Dtlen <- length(histSave[[21]])
plot((1:Ntlen)/Ntlen, Mod(2*frNt/Ntlen)^2,  type = "l", main = "no layers")
Fr <- 1:Dtlen/Dtlen
P <- Mod(2*frDt/Dtlen)^2
plot(Fr[1:(Dtlen/2)],P[1:(Dtlen/2)],  type = "l", main = "layers")
firstHarmonic <- which.max(P[1:340])
xline(Fr[firstHarmonic], col = "grey", lty = 3)
Fr[firstHarmonic]
#for(n in numLayer){
#load(paste0("nlsCoupon",n,".rda"))
#load("nlsCoupon5.rda")
n = 20
load(paste0(n,"spacingSyn45.rda"))
# center the coupon
centerCoupon <- cbind(scale(newCoupon[,1], center = TRUE, scale = FALSE),
scale(newCoupon[,2], center = TRUE, scale = FALSE),
newCoupon[,3])
angleSeq <- seq(0, 2*pi, by = pi/20) #test out a sequence of theta
histSave <- list()
i = 1
for(theta in angleSeq){
Rz <- aboutZ(theta)
RzCoupon <- centerCoupon %*% Rz
phi <- 45*pi/180 #45 degree tilt
Ry <- aboutY(phi)
RzyCoupon <- RzCoupon %*% Ry
# open3d()
# par3d(cex=0.7)
# plot3d(RzyCoupon[,1],
#        RzyCoupon[,2],
#        RzyCoupon[,3],
#        type = "s", size = 0.25,
#        xlab = "x", ylab = "y", zlab = "z")
#h<-hist(RzyCoupon[,3], breaks = 5000, plot = FALSE)
#col = "darkgrey", main = paste0(theta))
h<-hist(~RzyCoupon[,3], w=n/10,
col = "darkgrey", main = paste0("z axis rotation (radians) = ",round(theta,3)))
histSave[[i]] <- h$counts
i = i + 1
}
theta=pi
Rz <- aboutZ(theta)
RzCoupon <- centerCoupon %*% Rz
phi <- 45*pi/180 #45 degree tilt
Ry <- aboutY(phi)
RzyCoupon <- RzCoupon %*% Ry
#
# # open3d()
# # par3d(cex=0.7)
# # plot3d(RzyCoupon[,1],
# #        RzyCoupon[,2],
# #        RzyCoupon[,3],
# #        type = "s", size = 0.25,
# #        xlab = "x", ylab = "y", zlab = "z")
open3d()
par3d(cex=0.7)
plot3d(RzyCoupon[,1],
RzyCoupon[,2],
RzyCoupon[,3],
type = "s", size = 0.25,
xlab = "x", ylab = "y", zlab = "z")
h<-hist(~RzyCoupon[,3], w=n/10,
col = "darkgrey", main = paste0("z axis rotation (radians) = ",round(theta,3)))
frDt <- fft(histSave[[21]]-mean(histSave[[21]]))
frDt <- fft(histSave[[1]]-mean(histSave[[1]]))
Dtlen <- length(histSave[[1]])
Fr <- 1:Dtlen/Dtlen
P <- Mod(2*frDt/Dtlen)^2
plot(Fr[1:(Dtlen/2)],P[1:(Dtlen/2)],  type = "l", main = "layers")
histSave[[i]] <- h$counts
histSave <- list()
i = 1
histSave[[i]] <- h$counts
frDt <- fft(histSave[[1]]-mean(histSave[[1]]))
Dtlen <- length(histSave[[1]])
Fr <- 1:Dtlen/Dtlen
P <- Mod(2*frDt/Dtlen)^2
plot(Fr[1:(Dtlen/2)],P[1:(Dtlen/2)],  type = "l", main = "layers")
firstHarmonic <- which.max(P[1:340])
Rz <- aboutZ(theta)
RzCoupon <- centerCoupon %*% Rz
phi <- 45*pi/180 #45 degree tilt
Ry <- aboutY(phi)
RzyCoupon <- RzCoupon %*% Ry
h<-hist(~RzyCoupon[,3], w=0.5,
col = "darkgrey", main = paste0("z axis rotation (radians) = ",round(theta,3)))
i=2
histSave[[i]] <- h$counts
frDt <- fft(histSave[[2]]-mean(histSave[[2]]))
Dtlen <- length(histSave[[2]])
Fr <- 1:Dtlen/Dtlen
P <- Mod(2*frDt/Dtlen)^2
plot(Fr[1:(Dtlen/2)],P[1:(Dtlen/2)],  type = "l", main = "layers")
firstHarmonic <- which.max(P[1:340])
xline(Fr[firstHarmonic], col = "grey", lty = 3)
Fr[firstHarmonic]
frDd <- fft(detrend(histSave[[2]]))
Ddlen <- length(histSave[[2]])
Fr <- 1:Ddlen/Ddlen
P <- Mod(2*frDd/Ddlen)^2
plot(Fr[1:(Ddlen/2)],P[1:(Ddlen/2)],  type = "l", main = "layers")
firstHarmonic <- which.max(P[1:340])
setwd("C:/Users/barna/Documents/Coupons/nlsAxis/45degreeSlice/45degreeData")
#for(n in numLayer){
n = 20
load(paste0(n,"spacingSyn45.rda"))
# center the coupon
centerCoupon <- cbind(scale(newCoupon[,1], center = TRUE, scale = FALSE),
scale(newCoupon[,2], center = TRUE, scale = FALSE),
newCoupon[,3])
#angleSeq <- seq(0, 2*pi, by = pi/20) #test out a sequence of theta
angleDouble <- c(pi,2*pi) #for testing synthetics
histSave <- list()
i = 1
for(theta in angleDouble){
Rz <- aboutZ(theta)
RzCoupon <- centerCoupon %*% Rz
phi <- 45*pi/180 #45 degree tilt
Ry <- aboutY(phi)
RzyCoupon <- RzCoupon %*% Ry
# open3d()
# par3d(cex=0.7)
# plot3d(RzyCoupon[,1],
#        RzyCoupon[,2],
#        RzyCoupon[,3],
#        type = "s", size = 0.25,
#        xlab = "x", ylab = "y", zlab = "z")
h<-hist(~RzyCoupon[,3], w=0.5,
col = "darkgrey", main = paste0("z axis rotation (radians) = ",round(theta,3)))
histSave[[i]] <- h$counts
i = i + 1
}
histSavedf <- data.frame(lapply(histSave, "length<-", max(lengths(histSave))))
names(histSavedf) <- round(angleSeq, digits=3)
names(histSavedf) <- round(angleDouble, digits=3)
plot(round(angleSeq, digits=3),apply(histSavedf, 2, function(x) table(x)[1]), type = "b", pch = 20, main = paste0(n))
plot(round(angleDouble, digits=3),apply(histSavedf, 2, function(x) table(x)[1]), type = "b", pch = 20, main = paste0(n))
# }
#
which.max(apply(histSavedf, 2, function(x) table(x)[1]))
frDt <- fft(histSave[[2]]-mean(histSave[[2]]))
Dtlen <- length(histSave[[2]])
Fr <- 1:Dtlen/Dtlen
P <- Mod(2*frDt/Dtlen)^2
plot(Fr[1:(Dtlen/2)],P[1:(Dtlen/2)],  type = "l", main = "layers")
Dtlen <- length(histSave[[1]])
frDt <- fft(histSave[[1]]-mean(histSave[[1]]))
Fr <- 1:Dtlen/Dtlen
P <- Mod(2*frDt/Dtlen)^2
plot(Fr[1:(Dtlen/2)],P[1:(Dtlen/2)],  type = "l", main = "layers")
firstHarmonic <- which.max(P[1:340])
Fr <- 1:Ddlen/Ddlen
P <- Mod(2*frDd/Ddlen)^2
plot(Fr[1:(Ddlen/2)],P[1:(Ddlen/2)],  type = "l", main = "layers")
firstHarmonic <- which.max(P[1:340])
xline(Fr[firstHarmonic], col = "grey", lty = 3)
Fr[firstHarmonic]
which.max(apply(histSavedf, 2, function(x) table(x)[1]))
Fr[firstHarmonic]
#interp: every 10 bins we have a full cycle. Each binwidth is 10,
#and the coupon has a layer spacing of 100 = checks out
}
aboutY <- function(phi) {matrix( c(cos(phi), 0, sin(phi), 0, 1, 0, -sin(phi), 0, cos(phi)), 3, 3)}
aboutZ <- function(theta) {matrix( c(cos(theta), sin(theta), 0, -sin(theta), cos(theta), 0, 0, 0, 1), 3, 3 )}
setwd("C:/Users/barna/Documents/Coupons/nlsAxis/45degreeSlice/45degreeData")
numLayer <- seq(100,20,by=-5)
for(n in numLayer){
n = 20
load(paste0(n,"spacingSyn45.rda"))
# center the coupon
centerCoupon <- cbind(scale(newCoupon[,1], center = TRUE, scale = FALSE),
scale(newCoupon[,2], center = TRUE, scale = FALSE),
newCoupon[,3])
## ---------------------------------------------------------------
## start of for loop for angle Grid
#angleSeq <- seq(0, 2*pi, by = pi/20) #test out a sequence of theta
angleDouble <- c(pi,2*pi) #for testing synthetics
histSave <- list()
i = 1
for(theta in angleDouble){
Rz <- aboutZ(theta)
RzCoupon <- centerCoupon %*% Rz
phi <- 45*pi/180 #45 degree tilt
Ry <- aboutY(phi)
RzyCoupon <- RzCoupon %*% Ry
# open3d()
# par3d(cex=0.7)
# plot3d(RzyCoupon[,1],
#        RzyCoupon[,2],
#        RzyCoupon[,3],
#        type = "s", size = 0.25,
#        xlab = "x", ylab = "y", zlab = "z")
h<-hist(~RzyCoupon[,3], w=0.5,
col = "darkgrey", main = paste0("z axis rotation (radians) = ",round(theta,3)))
histSave[[i]] <- h$counts
i = i + 1
}
for(m in 1:2){
frDt <- fft(histSave[[m]]-mean(histSave[[m]]))
Dtlen <- length(histSave[[1]])
Fr <- 1:Dtlen/Dtlen
P <- Mod(2*frDt/Dtlen)^2
plot(Fr[1:(Dtlen/2)],P[1:(Dtlen/2)],  type = "l", main = paste0("layers",n,"_",m))
firstHarmonic <- which.max(P[1:(Dtlen/2)])
xline(Fr[firstHarmonic], col = "grey", lty = 3)
#h$breaks
Fr[firstHarmonic]
#interp: every 10 bins we have a full cycle. Each binwidth is 10,
#and the coupon has a layer spacing of 100 = checks out
}
}
numLayer <- seq(100,20,by=-5)
for(n in numLayer){
load(paste0(n,"spacingSyn45.rda"))
# center the coupon
centerCoupon <- cbind(scale(newCoupon[,1], center = TRUE, scale = FALSE),
scale(newCoupon[,2], center = TRUE, scale = FALSE),
newCoupon[,3])
## ---------------------------------------------------------------
## start of for loop for angle Grid
#angleSeq <- seq(0, 2*pi, by = pi/20) #test out a sequence of theta
angleDouble <- c(pi,2*pi) #for testing synthetics
histSave <- list()
i = 1
for(theta in angleDouble){
Rz <- aboutZ(theta)
RzCoupon <- centerCoupon %*% Rz
phi <- 45*pi/180 #45 degree tilt
Ry <- aboutY(phi)
RzyCoupon <- RzCoupon %*% Ry
# open3d()
# par3d(cex=0.7)
# plot3d(RzyCoupon[,1],
#        RzyCoupon[,2],
#        RzyCoupon[,3],
#        type = "s", size = 0.25,
#        xlab = "x", ylab = "y", zlab = "z")
h<-hist(~RzyCoupon[,3], w=0.5, plot = FALSE)
#col = "darkgrey", main = paste0("z axis rotation (radians) = ",round(theta,3)))
histSave[[i]] <- h$counts
i = i + 1
}
for(m in 1:2){
frDt <- fft(histSave[[m]]-mean(histSave[[m]]))
Dtlen <- length(histSave[[1]])
Fr <- 1:Dtlen/Dtlen
P <- Mod(2*frDt/Dtlen)^2
plot(Fr[1:(Dtlen/2)],P[1:(Dtlen/2)],  type = "l", main = paste0("layers",n,"_",m))
firstHarmonic <- which.max(P[1:(Dtlen/2)])
xline(Fr[firstHarmonic], col = "grey", lty = 3)
#h$breaks
Fr[firstHarmonic]
#interp: every 10 bins we have a full cycle. Each binwidth is 10,
#and the coupon has a layer spacing of 100 = checks out
}
}
numLayer <- seq(100,20,by=-5)
for(n in numLayer){
load(paste0(n,"spacingSyn45.rda"))
# center the coupon
centerCoupon <- cbind(scale(newCoupon[,1], center = TRUE, scale = FALSE),
scale(newCoupon[,2], center = TRUE, scale = FALSE),
newCoupon[,3])
## ---------------------------------------------------------------
## start of for loop for angle Grid
#angleSeq <- seq(0, 2*pi, by = pi/20) #test out a sequence of theta
angleDouble <- c(pi,2*pi) #for testing synthetics
histSave <- list()
i = 1
for(theta in angleDouble){
Rz <- aboutZ(theta)
RzCoupon <- centerCoupon %*% Rz
phi <- 45*pi/180 #45 degree tilt
Ry <- aboutY(phi)
RzyCoupon <- RzCoupon %*% Ry
# open3d()
# par3d(cex=0.7)
# plot3d(RzyCoupon[,1],
#        RzyCoupon[,2],
#        RzyCoupon[,3],
#        type = "s", size = 0.25,
#        xlab = "x", ylab = "y", zlab = "z")
h<-hist(~RzyCoupon[,3], w=n/10, plot = FALSE)
#col = "darkgrey", main = paste0("z axis rotation (radians) = ",round(theta,3)))
histSave[[i]] <- h$counts
i = i + 1
}
for(m in 1:2){
frDt <- fft(histSave[[m]]-mean(histSave[[m]]))
Dtlen <- length(histSave[[1]])
Fr <- 1:Dtlen/Dtlen
P <- Mod(2*frDt/Dtlen)^2
plot(Fr[1:(Dtlen/2)],P[1:(Dtlen/2)],  type = "l", main = paste0("layers",n,"_",m))
firstHarmonic <- which.max(P[1:(Dtlen/2)])
xline(Fr[firstHarmonic], col = "grey", lty = 3)
#h$breaks
Fr[firstHarmonic]
#interp: every 10 bins we have a full cycle. Each binwidth is 10,
#and the coupon has a layer spacing of 100 = checks out
}
}
warnings()
numLayer <- seq(100,5,by=-5)
for(n in numLayer){
load(paste0(n,"spacingSyn45.rda"))
# center the coupon
centerCoupon <- cbind(scale(newCoupon[,1], center = TRUE, scale = FALSE),
scale(newCoupon[,2], center = TRUE, scale = FALSE),
newCoupon[,3])
## ---------------------------------------------------------------
## start of for loop for angle Grid
#angleSeq <- seq(0, 2*pi, by = pi/20) #test out a sequence of theta
angleDouble <- c(pi,2*pi) #for testing synthetics
histSave <- list()
i = 1
for(theta in angleDouble){
Rz <- aboutZ(theta)
RzCoupon <- centerCoupon %*% Rz
phi <- 45*pi/180 #45 degree tilt
Ry <- aboutY(phi)
RzyCoupon <- RzCoupon %*% Ry
# open3d()
# par3d(cex=0.7)
# plot3d(RzyCoupon[,1],
#        RzyCoupon[,2],
#        RzyCoupon[,3],
#        type = "s", size = 0.25,
#        xlab = "x", ylab = "y", zlab = "z")
h<-hist(~RzyCoupon[,3], w=n/10, plot = FALSE)
#col = "darkgrey", main = paste0("z axis rotation (radians) = ",round(theta,3)))
histSave[[i]] <- h$counts
i = i + 1
}
for(m in 1:2){
frDt <- fft(histSave[[m]]-mean(histSave[[m]]))
Dtlen <- length(histSave[[1]])
Fr <- 1:Dtlen/Dtlen
P <- Mod(2*frDt/Dtlen)^2
plot(Fr[1:(Dtlen/2)],P[1:(Dtlen/2)],  type = "l", main = paste0("layers",n,"_",m))
firstHarmonic <- which.max(P[1:(Dtlen/2)])
xline(Fr[firstHarmonic], col = "grey", lty = 3)
#h$breaks
Fr[firstHarmonic]
#interp: every 10 bins we have a full cycle. Each binwidth is 10,
#and the coupon has a layer spacing of 100 = checks out
}
}
